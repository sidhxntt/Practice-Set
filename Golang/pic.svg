<svg viewBox="0 0 1000 700" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1000" height="700" fill="#1a1a1a"/>
  
  <!-- Event Loop Container -->
  <rect x="50" y="50" width="900" height="600" fill="none" stroke="#555" stroke-width="2" rx="10"/>
  <text x="60" y="40" fill="#fff" font-family="Arial, sans-serif" font-size="16" font-weight="bold">ðŸ”„ Event Loop</text>
  
  <!-- Main Thread Container -->
  <rect x="80" y="100" width="450" height="500" fill="none" stroke="#666" stroke-width="1.5" rx="8"/>
  <text x="90" y="90" fill="#ccc" font-family="Arial, sans-serif" font-size="14" font-weight="bold">ðŸ§µ Main Thread - async</text>
  
  <!-- Task Queue Container -->
  <rect x="580" y="100" width="350" height="500" fill="none" stroke="#666" stroke-width="1.5" rx="8"/>
  <text x="590" y="90" fill="#ccc" font-family="Arial, sans-serif" font-size="14" font-weight="bold">ðŸ“‹ Task Queue</text>
  
  <!-- Function boxes in main thread -->
  <!-- func1 -->
  <rect x="200" y="130" width="100" height="40" fill="none" stroke="#4a9eff" stroke-width="2" rx="5"/>
  <text x="250" y="155" fill="#fff" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">func1</text>
  
  <!-- Arrow from func1 to async func2 -->
  <path d="M 250 170 L 250 190" stroke="#4a9eff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- async func2 call with promise -->
  <rect x="130" y="200" width="240" height="60" fill="none" stroke="#ff6b4a" stroke-width="2" rx="5"/>
  <text x="250" y="220" fill="#fff" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">async func2() call</text>
  <text x="250" y="235" fill="#ffd700" font-family="Arial, sans-serif" font-size="11" text-anchor="middle">returns Promise immediately</text>
  <text x="250" y="248" fill="#ccc" font-family="Arial, sans-serif" font-size="10" text-anchor="middle">(non-blocking)</text>
  
  <!-- Arrow from async call to func3 -->
  <path d="M 250 260 L 250 290" stroke="#4a9eff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <text x="270" y="280" fill="#4eff6b" font-family="Arial, sans-serif" font-size="12">immediately</text>
  
  <!-- func3 -->
  <rect x="200" y="300" width="100" height="40" fill="none" stroke="#4a9eff" stroke-width="2" rx="5"/>
  <text x="250" y="325" fill="#fff" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">func3</text>
  
  <!-- Promise .then() handler registration -->
  <rect x="150" y="360" width="200" height="50" fill="none" stroke="#ffd700" stroke-width="2" rx="5"/>
  <text x="250" y="380" fill="#fff" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">.then(callback)</text>
  <text x="250" y="395" fill="#ccc" font-family="Arial, sans-serif" font-size="10" text-anchor="middle">registers callback</text>
  
  <!-- Arrow from func3 to promise handler -->
  <path d="M 250 340 L 250 360" stroke="#4a9eff" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  
  <!-- Arrow from async call to task queue -->
  <path d="M 370 230 L 600 230" stroke="#ff6b4a" stroke-width="2" fill="none" marker-end="url(#arrowhead)" stroke-dasharray="5,5"/>
  
  <!-- func2 in task queue -->
  <rect x="620" y="200" width="120" height="60" fill="none" stroke="#ff6b4a" stroke-width="2" rx="5" stroke-dasharray="3,3"/>
  <text x="680" y="220" fill="#fff" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">func2</text>
  <text x="680" y="235" fill="#ccc" font-family="Arial, sans-serif" font-size="10" text-anchor="middle">(executing in</text>
  <text x="680" y="248" fill="#ccc" font-family="Arial, sans-serif" font-size="10" text-anchor="middle">background)</text>
  
  <!-- Timer indication -->
  <text x="680" y="280" fill="#ff6b4a" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">5 minutes</text>
  
  <!-- Callback Queue section -->
  <rect x="600" y="320" width="300" height="100" fill="none" stroke="#ffd700" stroke-width="1" rx="5"/>
  <text x="610" y="340" fill="#ffd700" font-family="Arial, sans-serif" font-size="12" font-weight="bold">Callback Queue</text>
  <rect x="620" y="350" width="120" height="50" fill="none" stroke="#ffd700" stroke-width="2" rx="5"/>
  <text x="680" y="370" fill="#fff" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">callback</text>
  <text x="680" y="385" fill="#ccc" font-family="Arial, sans-serif" font-size="10" text-anchor="middle">(ready to execute)</text>
  
  <!-- Arrow from func2 completion to callback queue -->
  <path d="M 680 280 L 680 350" stroke="#ffd700" stroke-width="2" fill="none" marker-end="url(#arrowhead2)" stroke-dasharray="5,5"/>
  <text x="700" y="320" fill="#ffd700" font-family="Arial, sans-serif" font-size="10">Promise resolves</text>
  
  <!-- Arrow back to main thread after completion -->
  <path d="M 620 375 L 300 500" stroke="#4eff6b" stroke-width="2" fill="none" marker-end="url(#arrowhead3)" stroke-dasharray="5,5"/>
  <text x="450" y="440" fill="#4eff6b" font-family="Arial, sans-serif" font-size="12">Event loop picks up</text>
  <text x="450" y="455" fill="#4eff6b" font-family="Arial, sans-serif" font-size="12">callback from queue</text>
  
  <!-- Callback execution in main thread -->
  <rect x="150" y="510" width="200" height="50" fill="none" stroke="#4eff6b" stroke-width="2" rx="5"/>
  <text x="250" y="530" fill="#fff" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">callback executed</text>
  <text x="250" y="545" fill="#ccc" font-family="Arial, sans-serif" font-size="10" text-anchor="middle">(with func2 result)</text>
  
  <!-- Explanation boxes -->
  <rect x="60" y="430" width="180" height="130" fill="none" stroke="#666" stroke-width="1" rx="5" stroke-dasharray="8,4"/>
  <text x="70" y="450" fill="#ffd700" font-family="Arial, sans-serif" font-size="12" font-weight="bold">Promise Pattern:</text>
  <text x="70" y="465" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Returns Promise object</text>
  <text x="70" y="478" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ .then() registers callback</text>
  <text x="70" y="491" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Non-blocking execution</text>
  <text x="70" y="504" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Event loop manages</text>
  <text x="70" y="517" fill="#fff" font-family="Arial, sans-serif" font-size="10">  callback execution</text>
  <text x="70" y="530" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Better error handling</text>
  <text x="70" y="543" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Chainable operations</text>
  
  <rect x="770" y="450" width="160" height="130" fill="none" stroke="#666" stroke-width="1" rx="5" stroke-dasharray="8,4"/>
  <text x="780" y="470" fill="#ff6b4a" font-family="Arial, sans-serif" font-size="12" font-weight="bold">Callback Pattern:</text>
  <text x="780" y="485" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Function passed as</text>
  <text x="780" y="498" fill="#fff" font-family="Arial, sans-serif" font-size="10">  parameter</text>
  <text x="780" y="511" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Called when async</text>
  <text x="780" y="524" fill="#fff" font-family="Arial, sans-serif" font-size="10">  operation completes</text>
  <text x="780" y="537" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Can lead to callback</text>
  <text x="780" y="550" fill="#fff" font-family="Arial, sans-serif" font-size="10">  hell if nested deeply</text>
  <text x="780" y="563" fill="#fff" font-family="Arial, sans-serif" font-size="10">â€¢ Error handling with</text>
  <text x="780" y="576" fill="#fff" font-family="Arial, sans-serif" font-size="10">  error-first pattern</text>
  
  <!-- Arrow marker definitions -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#4a9eff"/>
    </marker>
    <marker id="arrowhead2" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#ffd700"/>
    </marker>
    <marker id="arrowhead3" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#4eff6b"/>
    </marker>
  </defs>
</svg>