# File: logstash/pipeline/django.conf

input {
  tcp {
    port => 5000
    codec => json
  }
  
  file {
    path => "/path/to/your/logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json
  }
}

filter {
  # Add tags based on log source
  if [logger] == "request_logger" {
    mutate {
      add_tag => ["request"]
    }
  } else if [logger] == "api_exceptions" {
    mutate {
      add_tag => ["exception"]
    }
  }
  
  # Parse timestamp
  date {
    match => ["@timestamp", "ISO8601"]
    target => "@timestamp"
  }
  
  # Add geo location based on client IP if available
  if [client][ip] {
    geoip {
      source => "[client][ip]"
      target => "[client][geo]"
    }
  }
  
  # Enrich HTTP status codes with status class
  if [response][status] {
    if [response][status] >= 200 and [response][status] < 300 {
      mutate {
        add_field => { "[response][status_class]" => "success" }
      }
    } else if [response][status] >= 300 and [response][status] < 400 {
      mutate {
        add_field => { "[response][status_class]" => "redirect" }
      }
    } else if [response][status] >= 400 and [response][status] < 500 {
      mutate {
        add_field => { "[response][status_class]" => "client_error" }
      }
    } else if [response][status] >= 500 {
      mutate {
        add_field => { "[response][status_class]" => "server_error" }
      }
    }
  }
  
  # Categorize endpoint types
  if [request][path] {
    if [request][path] =~ "^/api/v[0-9]+" {
      mutate {
        add_field => { "[request][type]" => "api" }
      }
    } else if [request][path] =~ "^/admin" {
      mutate {
        add_field => { "[request][type]" => "admin" }
      }
    } else {
      mutate {
        add_field => { "[request][type]" => "other" }
      }
    }
  }
  
  # Create custom fields for easier searching
  if [metrics][response_time] {
    if [metrics][response_time] > 1000 {
      mutate {
        add_field => { "[metrics][slow_request]" => true }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[app]}-%{[environment]}-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }
  
  # Optionally output to stdout for debugging
  if [environment] == "development" {
    stdout {
      codec => rubydebug
    }
  }
}